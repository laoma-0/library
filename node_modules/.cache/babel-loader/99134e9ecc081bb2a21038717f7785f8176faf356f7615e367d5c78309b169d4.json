{"ast":null,"code":"import _objectSpread from \"D:/\\u56FE\\u4E66\\u7BA1\\u7406\\u7CFB\\u7EDF/library/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport Sidebar from \"@/components/Sidebar.vue\";\nimport Breadcrumb from \"@/components/Breadcrumb.vue\";\nimport BookSearch from \"@/components/BookSearch.vue\";\nimport BookTable from \"@/components/BookTable.vue\";\nfunction getCurrentUser() {\n  try {\n    if (typeof window !== \"undefined\") {\n      var w = eval(\"window\");\n      if (w && w.localStorage) {\n        var userStr = w.localStorage.getItem(\"user\");\n        if (userStr) return JSON.parse(userStr);\n      }\n    }\n  } catch (e) {\n    // ignore error\n  }\n  return null;\n}\nexport default {\n  name: \"BookManagement\",\n  components: {\n    Sidebar: Sidebar,\n    Breadcrumb: Breadcrumb,\n    BookSearch: BookSearch,\n    BookTable: BookTable\n  },\n  data: function data() {\n    return {\n      breadcrumbItems: [{\n        text: \"图书列表\"\n      }],\n      books: [],\n      filteredBooks: [],\n      page: 1,\n      pageSize: 10,\n      multipleSelection: [],\n      showBookForm: false,\n      currentBook: null,\n      total: 0,\n      searchParams: {},\n      isAdmin: false\n    };\n  },\n  computed: {\n    pagedBooks: function pagedBooks() {\n      return this.filteredBooks;\n    }\n  },\n  created: function created() {\n    var currentUser = getCurrentUser();\n    this.isAdmin = currentUser && currentUser.role === 1;\n    this.fetchBooks();\n  },\n  methods: {\n    fetchBooks: function fetchBooks() {\n      var _this = this;\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var query = _objectSpread(_objectSpread({\n        page: this.page,\n        size: this.pageSize\n      }, this.searchParams), params);\n      this.$axios.get(\"/api/books/with-category\", {\n        params: query\n      }).then(function (res) {\n        var list = [];\n        var total = 0;\n        if (res.data) {\n          if (Array.isArray(res.data.data)) {\n            list = res.data.data;\n            total = res.data.total || res.data.count || 0;\n          } else if (Array.isArray(res.data.list)) {\n            list = res.data.list;\n            total = res.data.total || res.data.count || 0;\n          } else if (Array.isArray(res.data)) {\n            list = res.data;\n            total = res.data.length;\n          }\n        }\n        if (!Array.isArray(list)) list = [];\n        _this.filteredBooks = list;\n        _this.total = total;\n      })[\"catch\"](function (err) {\n        console.error(\"Error fetching books:\", err);\n        _this.$message.error(\"获取图书数据失败，请稍后重试\"); // 提供用户友好的错误提示\n        _this.filteredBooks = [];\n        _this.total = 0;\n      });\n    },\n    handleSearch: function handleSearch(params) {\n      this.searchParams = params;\n      this.fetchBooks();\n    },\n    handleReset: function handleReset() {\n      this.searchParams = {};\n      this.fetchBooks();\n    },\n    handlePageChange: function handlePageChange(page) {\n      this.page = page;\n      this.fetchBooks();\n    },\n    handleSelectionChange: function handleSelectionChange(selection) {\n      this.multipleSelection = selection;\n    },\n    openBookForm: function openBookForm() {\n      var book = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      this.currentBook = book;\n      this.showBookForm = true;\n    },\n    handleBookSubmit: function handleBookSubmit(book) {\n      var _this2 = this;\n      if (book.id) {\n        this.$axios.put(\"/api/books/\".concat(book.id), book).then(function () {\n          _this2.showBookForm = false;\n          _this2.fetchBooks();\n        });\n      } else {\n        this.$axios.post(\"/api/books\", book).then(function () {\n          _this2.showBookForm = false;\n          _this2.fetchBooks();\n        });\n      }\n    },\n    handleDelete: function handleDelete(book) {\n      var _this3 = this;\n      this.$axios[\"delete\"](\"/api/books/\".concat(book.id)).then(function () {\n        _this3.fetchBooks();\n      });\n    },\n    handleBatchDelete: function handleBatchDelete() {\n      var _this4 = this;\n      var ids = this.multipleSelection.map(function (b) {\n        return b.id;\n      });\n      this.$axios[\"delete\"](\"/api/books/batch\", {\n        data: {\n          ids: ids\n        }\n      }).then(function () {\n        _this4.fetchBooks();\n      });\n    }\n  }\n};","map":{"version":3,"names":["Sidebar","Breadcrumb","BookSearch","BookTable","getCurrentUser","window","w","eval","localStorage","userStr","getItem","JSON","parse","e","name","components","data","breadcrumbItems","text","books","filteredBooks","page","pageSize","multipleSelection","showBookForm","currentBook","total","searchParams","isAdmin","computed","pagedBooks","created","currentUser","role","fetchBooks","methods","_this","params","arguments","length","undefined","query","_objectSpread","size","$axios","get","then","res","list","Array","isArray","count","err","console","error","$message","handleSearch","handleReset","handlePageChange","handleSelectionChange","selection","openBookForm","book","handleBookSubmit","_this2","id","put","concat","post","handleDelete","_this3","handleBatchDelete","_this4","ids","map","b"],"sources":["src/views/BookManagement.vue"],"sourcesContent":["<template>\r\n  <div style=\"display: flex; flex: 1; min-height: 0\">\r\n    <Sidebar class=\"sidebar\" :active-menu=\"'/book-management'\" />\r\n    <div class=\"main-content\">\r\n      <Breadcrumb :items=\"breadcrumbItems\" />\r\n      <div class=\"content-area\">\r\n        <BookSearch @search=\"handleSearch\" @reset=\"handleReset\" />\r\n        <div class=\"actions\">\r\n          <el-button v-if=\"isAdmin\" type=\"primary\" @click=\"openBookForm()\">\r\n            添加图书\r\n          </el-button>\r\n          <el-button\r\n            v-if=\"isAdmin\"\r\n            type=\"danger\"\r\n            :disabled=\"!multipleSelection.length\"\r\n            @click=\"handleBatchDelete\"\r\n          >\r\n            批量删除\r\n          </el-button>\r\n        </div>\r\n        <BookTable\r\n          :books=\"pagedBooks\"\r\n          :total=\"total\"\r\n          :page=\"page\"\r\n          :page-size=\"pageSize\"\r\n          :show-actions=\"isAdmin\"\r\n          @selection-change=\"handleSelectionChange\"\r\n          @edit=\"openBookForm\"\r\n          @delete=\"handleDelete\"\r\n          @page-change=\"handlePageChange\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Sidebar from \"@/components/Sidebar.vue\";\r\nimport Breadcrumb from \"@/components/Breadcrumb.vue\";\r\nimport BookSearch from \"@/components/BookSearch.vue\";\r\nimport BookTable from \"@/components/BookTable.vue\";\r\n\r\nfunction getCurrentUser() {\r\n  try {\r\n    if (typeof window !== \"undefined\") {\r\n      const w = eval(\"window\");\r\n      if (w && w.localStorage) {\r\n        const userStr = w.localStorage.getItem(\"user\");\r\n        if (userStr) return JSON.parse(userStr);\r\n      }\r\n    }\r\n  } catch (e) {\r\n    // ignore error\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default {\r\n  name: \"BookManagement\",\r\n  components: {\r\n    Sidebar,\r\n    Breadcrumb,\r\n    BookSearch,\r\n    BookTable,\r\n  },\r\n  data() {\r\n    return {\r\n      breadcrumbItems: [{ text: \"图书列表\" }],\r\n      books: [],\r\n      filteredBooks: [],\r\n      page: 1,\r\n      pageSize: 10,\r\n      multipleSelection: [],\r\n      showBookForm: false,\r\n      currentBook: null,\r\n      total: 0,\r\n      searchParams: {},\r\n      isAdmin: false,\r\n    };\r\n  },\r\n  computed: {\r\n    pagedBooks() {\r\n      return this.filteredBooks;\r\n    },\r\n  },\r\n  created() {\r\n    const currentUser = getCurrentUser();\r\n    this.isAdmin = currentUser && currentUser.role === 1;\r\n    this.fetchBooks();\r\n  },\r\n  methods: {\r\n    fetchBooks(params = {}) {\r\n        const query = {\r\n            page: this.page,\r\n            size: this.pageSize,\r\n            ...this.searchParams,\r\n            ...params,\r\n        };\r\n        this.$axios\r\n            .get(\"/api/books/with-category\", { params: query })\r\n            .then((res) => {\r\n                let list = [];\r\n                let total = 0;\r\n                if (res.data) {\r\n                    if (Array.isArray(res.data.data)) {\r\n                        list = res.data.data;\r\n                        total = res.data.total || res.data.count || 0;\r\n                    } else if (Array.isArray(res.data.list)) {\r\n                        list = res.data.list;\r\n                        total = res.data.total || res.data.count || 0;\r\n                    } else if (Array.isArray(res.data)) {\r\n                        list = res.data;\r\n                        total = res.data.length;\r\n                    }\r\n                }\r\n                if (!Array.isArray(list)) list = [];\r\n                this.filteredBooks = list;\r\n                this.total = total;\r\n            })\r\n            .catch((err) => {\r\n                console.error(\"Error fetching books:\", err);\r\n                this.$message.error(\"获取图书数据失败，请稍后重试\"); // 提供用户友好的错误提示\r\n                this.filteredBooks = [];\r\n                this.total = 0;\r\n            });\r\n    },\r\n    handleSearch(params) {\r\n      this.searchParams = params;\r\n      this.fetchBooks();\r\n    },\r\n    handleReset() {\r\n      this.searchParams = {};\r\n      this.fetchBooks();\r\n    },\r\n    handlePageChange(page) {\r\n      this.page = page;\r\n      this.fetchBooks();\r\n    },\r\n    handleSelectionChange(selection) {\r\n      this.multipleSelection = selection;\r\n    },\r\n    openBookForm(book = null) {\r\n      this.currentBook = book;\r\n      this.showBookForm = true;\r\n    },\r\n    handleBookSubmit(book) {\r\n      if (book.id) {\r\n        this.$axios.put(`/api/books/${book.id}`, book).then(() => {\r\n          this.showBookForm = false;\r\n          this.fetchBooks();\r\n        });\r\n      } else {\r\n        this.$axios.post(\"/api/books\", book).then(() => {\r\n          this.showBookForm = false;\r\n          this.fetchBooks();\r\n        });\r\n      }\r\n    },\r\n    handleDelete(book) {\r\n      this.$axios.delete(`/api/books/${book.id}`).then(() => {\r\n        this.fetchBooks();\r\n      });\r\n    },\r\n    handleBatchDelete() {\r\n      const ids = this.multipleSelection.map((b) => b.id);\r\n      this.$axios.delete(`/api/books/batch`, { data: { ids } }).then(() => {\r\n        this.fetchBooks();\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 添加样式 */\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}