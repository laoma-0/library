{"ast":null,"code":"import _objectSpread from \"D:/\\u56FE\\u4E66\\u7BA1\\u7406\\u7CFB\\u7EDF/library/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regenerator from \"D:/\\u56FE\\u4E66\\u7BA1\\u7406\\u7CFB\\u7EDF/library/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"D:/\\u56FE\\u4E66\\u7BA1\\u7406\\u7CFB\\u7EDF/library/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { getBooks, addBook, updateBook, deleteBook as _deleteBook } from '@/api/book';\nexport default {\n  data: function data() {\n    return {\n      books: [],\n      total: 0,\n      pageSize: 10,\n      currentPage: 1,\n      searchQuery: '',\n      selectedBooks: [],\n      dialogVisible: false,\n      isEdit: false,\n      formData: {\n        title: '',\n        author: '',\n        isbn: '',\n        publishDate: '',\n        status: '在库'\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.fetchBooks();\n  },\n  methods: {\n    // 获取图书列表\n    fetchBooks: function fetchBooks() {\n      var _arguments = arguments,\n        _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var page, params, res;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              page = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : 1;\n              _this.currentPage = page;\n              params = {\n                page: _this.currentPage,\n                limit: _this.pageSize,\n                query: _this.searchQuery\n              };\n              _context.n = 1;\n              return getBooks(params);\n            case 1:\n              res = _context.v;\n              _this.books = res.data.items;\n              _this.total = res.data.total;\n            case 2:\n              return _context.a(2);\n          }\n        }, _callee);\n      }))();\n    },\n    // 处理分页\n    handlePageChange: function handlePageChange(page) {\n      this.fetchBooks(page);\n    },\n    // 处理选中项\n    handleSelectionChange: function handleSelectionChange(selection) {\n      this.selectedBooks = selection;\n    },\n    // 打开新增弹窗\n    openAddDialog: function openAddDialog() {\n      this.isEdit = false;\n      this.formData = {\n        title: '',\n        author: '',\n        isbn: '',\n        publishDate: '',\n        status: '在库'\n      };\n      this.dialogVisible = true;\n    },\n    // 编辑图书\n    editBook: function editBook(book) {\n      this.isEdit = true;\n      this.formData = _objectSpread({}, book);\n      this.dialogVisible = true;\n    },\n    // 提交表单\n    submitForm: function submitForm() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              if (!_this2.isEdit) {\n                _context2.n = 2;\n                break;\n              }\n              _context2.n = 1;\n              return updateBook(_this2.formData.id, _this2.formData);\n            case 1:\n              _this2.$message.success('更新成功');\n              _context2.n = 4;\n              break;\n            case 2:\n              _context2.n = 3;\n              return addBook(_this2.formData);\n            case 3:\n              _this2.$message.success('添加成功');\n            case 4:\n              _this2.dialogVisible = false;\n              _this2.fetchBooks(_this2.currentPage);\n            case 5:\n              return _context2.a(2);\n          }\n        }, _callee2);\n      }))();\n    },\n    // 单个删除\n    deleteBook: function deleteBook(id) {\n      var _this3 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        var _t;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.n) {\n            case 0:\n              _context3.p = 0;\n              _context3.n = 1;\n              return _this3.$confirm('确定要删除该图书吗？', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n              });\n            case 1:\n              _context3.n = 2;\n              return _deleteBook(id);\n            case 2:\n              _this3.$message.success('删除成功');\n              _this3.fetchBooks(_this3.currentPage);\n              _context3.n = 4;\n              break;\n            case 3:\n              _context3.p = 3;\n              _t = _context3.v;\n              if (_t !== 'cancel') {\n                _this3.$message.error('删除失败');\n              }\n            case 4:\n              return _context3.a(2);\n          }\n        }, _callee3, null, [[0, 3]]);\n      }))();\n    },\n    // 批量删除\n    batchDelete: function batchDelete() {\n      var _this4 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {\n        var ids, _t2;\n        return _regenerator().w(function (_context4) {\n          while (1) switch (_context4.n) {\n            case 0:\n              if (!(_this4.selectedBooks.length === 0)) {\n                _context4.n = 1;\n                break;\n              }\n              _this4.$message.warning('请先选择要删除的图书');\n              return _context4.a(2);\n            case 1:\n              _context4.p = 1;\n              _context4.n = 2;\n              return _this4.$confirm(\"\\u786E\\u5B9A\\u8981\\u5220\\u9664\\u9009\\u4E2D\\u7684\".concat(_this4.selectedBooks.length, \"\\u672C\\u56FE\\u4E66\\u5417\\uFF1F\"), '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n              });\n            case 2:\n              ids = _this4.selectedBooks.map(function (book) {\n                return book.id;\n              });\n              _context4.n = 3;\n              return _deleteBook(ids);\n            case 3:\n              _this4.$message.success('批量删除成功');\n              _this4.fetchBooks(_this4.currentPage);\n              _this4.selectedBooks = [];\n              _context4.n = 5;\n              break;\n            case 4:\n              _context4.p = 4;\n              _t2 = _context4.v;\n              if (_t2 !== 'cancel') {\n                _this4.$message.error('批量删除失败');\n              }\n            case 5:\n              return _context4.a(2);\n          }\n        }, _callee4, null, [[1, 4]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["getBooks","addBook","updateBook","deleteBook","data","books","total","pageSize","currentPage","searchQuery","selectedBooks","dialogVisible","isEdit","formData","title","author","isbn","publishDate","status","mounted","fetchBooks","methods","_arguments","arguments","_this","_asyncToGenerator","_regenerator","m","_callee","page","params","res","w","_context","n","length","undefined","limit","query","v","items","a","handlePageChange","handleSelectionChange","selection","openAddDialog","editBook","book","_objectSpread","submitForm","_this2","_callee2","_context2","id","$message","success","_this3","_callee3","_t","_context3","p","$confirm","confirmButtonText","cancelButtonText","type","error","batchDelete","_this4","_callee4","ids","_t2","_context4","warning","concat","map"],"sources":["src/views/BookManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"book-management\">\r\n    <!-- 搜索区域 -->\r\n    <div class=\"search-bar\">\r\n      <el-input v-model=\"searchQuery\" placeholder=\"书名/作者/ISBN\" style=\"width: 300px; margin-right: 10px;\" />\r\n      <el-button type=\"primary\" @click=\"fetchBooks\">搜索</el-button>\r\n    </div>\r\n\r\n    <!-- 操作按钮 -->\r\n    <div class=\"actions\" style=\"margin: 15px 0;\">\r\n      <el-button type=\"success\" @click=\"openAddDialog\">新增</el-button>\r\n      <el-button type=\"danger\" @click=\"batchDelete\">批量删除</el-button>\r\n    </div>\r\n\r\n    <!-- 图书表格 -->\r\n    <el-table :data=\"books\" border @selection-change=\"handleSelectionChange\">\r\n      <el-table-column type=\"selection\" width=\"55\" />\r\n      <el-table-column prop=\"title\" label=\"书名\" />\r\n      <el-table-column prop=\"author\" label=\"作者\" />\r\n      <el-table-column prop=\"isbn\" label=\"ISBN\" />\r\n      <el-table-column prop=\"publishDate\" label=\"出版日期\" />\r\n      <el-table-column prop=\"status\" label=\"状态\" />\r\n      <el-table-column label=\"操作\" width=\"200\">\r\n        <template #default=\"scope\">\r\n          <el-button size=\"small\" @click=\"editBook(scope.row)\">编辑</el-button>\r\n          <el-button size=\"small\" type=\"danger\" @click=\"deleteBook(scope.row.id)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <el-pagination\r\n      layout=\"prev, pager, next\"\r\n      :total=\"total\"\r\n      :page-size=\"pageSize\"\r\n      @current-change=\"handlePageChange\"\r\n    />\r\n\r\n    <!-- 弹窗表单 -->\r\n    <el-dialog v-model=\"dialogVisible\" :title=\"isEdit ? '编辑图书' : '新增图书'\">\r\n      <el-form ref=\"form\" :model=\"formData\" label-width=\"100px\">\r\n        <el-form-item label=\"书名\">\r\n          <el-input v-model=\"formData.title\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"作者\">\r\n          <el-input v-model=\"formData.author\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"ISBN\">\r\n          <el-input v-model=\"formData.isbn\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"出版日期\">\r\n          <el-date-picker v-model=\"formData.publishDate\" type=\"date\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\">\r\n          <el-select v-model=\"formData.status\" placeholder=\"请选择\">\r\n            <el-option label=\"在库\" value=\"在库\" />\r\n            <el-option label=\"借出\" value=\"借出\" />\r\n            <el-option label=\"维修\" value=\"维修\" />\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"submitForm\">确认</el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getBooks, addBook, updateBook, deleteBook } from '@/api/book'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      books: [],\r\n      total: 0,\r\n      pageSize: 10,\r\n      currentPage: 1,\r\n      searchQuery: '',\r\n      selectedBooks: [],\r\n      dialogVisible: false,\r\n      isEdit: false,\r\n      formData: {\r\n        title: '',\r\n        author: '',\r\n        isbn: '',\r\n        publishDate: '',\r\n        status: '在库'\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchBooks()\r\n  },\r\n  methods: {\r\n    // 获取图书列表\r\n    async fetchBooks(page = 1) {\r\n      this.currentPage = page\r\n      const params = {\r\n        page: this.currentPage,\r\n        limit: this.pageSize,\r\n        query: this.searchQuery\r\n      }\r\n      const res = await getBooks(params)\r\n      this.books = res.data.items\r\n      this.total = res.data.total\r\n    },\r\n\r\n    // 处理分页\r\n    handlePageChange(page) {\r\n      this.fetchBooks(page)\r\n    },\r\n\r\n    // 处理选中项\r\n    handleSelectionChange(selection) {\r\n      this.selectedBooks = selection\r\n    },\r\n\r\n    // 打开新增弹窗\r\n    openAddDialog() {\r\n      this.isEdit = false\r\n      this.formData = {\r\n        title: '',\r\n        author: '',\r\n        isbn: '',\r\n        publishDate: '',\r\n        status: '在库'\r\n      }\r\n      this.dialogVisible = true\r\n    },\r\n\r\n    // 编辑图书\r\n    editBook(book) {\r\n      this.isEdit = true\r\n      this.formData = { ...book }\r\n      this.dialogVisible = true\r\n    },\r\n\r\n    // 提交表单\r\n    async submitForm() {\r\n      if (this.isEdit) {\r\n        await updateBook(this.formData.id, this.formData)\r\n        this.$message.success('更新成功')\r\n      } else {\r\n        await addBook(this.formData)\r\n        this.$message.success('添加成功')\r\n      }\r\n      this.dialogVisible = false\r\n      this.fetchBooks(this.currentPage)\r\n    },\r\n\r\n    // 单个删除\r\n    async deleteBook(id) {\r\n      try {\r\n        await this.$confirm('确定要删除该图书吗？', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        })\r\n        await deleteBook(id)\r\n        this.$message.success('删除成功')\r\n        this.fetchBooks(this.currentPage)\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          this.$message.error('删除失败')\r\n        }\r\n      }\r\n    },\r\n\r\n    // 批量删除\r\n    async batchDelete() {\r\n      if (this.selectedBooks.length === 0) {\r\n        this.$message.warning('请先选择要删除的图书')\r\n        return\r\n      }\r\n      \r\n      try {\r\n        await this.$confirm(`确定要删除选中的${this.selectedBooks.length}本图书吗？`, '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        })\r\n        const ids = this.selectedBooks.map(book => book.id)\r\n        await deleteBook(ids)\r\n        this.$message.success('批量删除成功')\r\n        this.fetchBooks(this.currentPage)\r\n        this.selectedBooks = []\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          this.$message.error('批量删除失败')\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}