{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Message } from \"element-ui\";\nimport axios from \"axios\";\nexport default {\n  name: \"Register\",\n  data: function data() {\n    var _this = this;\n    return {\n      registerForm: {\n        username: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        realName: \"\",\n        phone: \"\",\n        email: \"\",\n        role: \"user\" // 默认只能注册为读者\n      },\n      registerLoading: false,\n      registerRules: {\n        username: [{\n          required: true,\n          message: \"请输入账号\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: \"请输入密码\",\n          trigger: \"blur\"\n        }, {\n          min: 6,\n          max: 20,\n          message: \"密码长度6-20位\",\n          trigger: \"blur\"\n        }],\n        confirmPassword: [{\n          required: true,\n          message: \"请确认密码\",\n          trigger: \"blur\"\n        }, {\n          validator: function validator(rule, value, callback) {\n            if (value !== _this.registerForm.password) {\n              callback(\"两次输入密码不一致\");\n            } else {\n              callback();\n            }\n          },\n          trigger: \"blur\"\n        }],\n        realName: [{\n          required: true,\n          message: \"请输入姓名\",\n          trigger: \"blur\"\n        }],\n        phone: [{\n          required: true,\n          message: \"请输入手机号\",\n          trigger: \"blur\"\n        }],\n        email: [{\n          required: true,\n          message: \"请输入邮箱\",\n          trigger: \"blur\"\n        }, {\n          type: \"email\",\n          message: \"邮箱格式不正确\",\n          trigger: \"blur\"\n        }],\n        role: [{\n          required: true,\n          message: \"请选择身份\",\n          trigger: \"change\"\n        }]\n      }\n    };\n  },\n  methods: {\n    handleRegister: function handleRegister() {\n      var _this2 = this;\n      this.$refs.registerForm.validate(function (valid) {\n        if (!valid) return;\n        _this2.registerLoading = true;\n        axios.post(\"/api/users/register\", {\n          username: _this2.registerForm.username,\n          password: _this2.registerForm.password,\n          realName: _this2.registerForm.realName,\n          phone: _this2.registerForm.phone,\n          email: _this2.registerForm.email,\n          role: _this2.registerForm.role\n        }).then(function (res) {\n          _this2.registerLoading = false;\n          if (res.data && res.data.success) {\n            Message.success(\"注册成功，请登录\");\n            _this2.$router.push({\n              path: \"/login\"\n            });\n          } else {\n            Message.error(res.data && res.data.message ? res.data.message : \"注册失败\");\n          }\n        })[\"catch\"](function (err) {\n          _this2.registerLoading = false;\n          var msg = \"注册失败\";\n          // 405错误处理提示\n          if (err.response && err.response.status === 405) {\n            msg = \"后端接口不支持POST方法，请联系管理员或后端开发修正接口\";\n          } else if (err.response && err.response.data && err.response.data.message) {\n            msg = err.response.data.message;\n          }\n          Message.error(msg);\n        });\n      });\n    },\n    goLogin: function goLogin() {\n      this.$router.push({\n        path: \"/login\"\n      });\n    }\n  }\n};","map":{"version":3,"names":["Message","axios","name","data","_this","registerForm","username","password","confirmPassword","realName","phone","email","role","registerLoading","registerRules","required","message","trigger","min","max","validator","rule","value","callback","type","methods","handleRegister","_this2","$refs","validate","valid","post","then","res","success","$router","push","path","error","err","msg","response","status","goLogin"],"sources":["src/components/Register.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-bg\">\r\n    <div class=\"register-center\">\r\n      <div class=\"register-box\">\r\n        <h2 class=\"register-title\">注册账号</h2>\r\n        <el-form\r\n          ref=\"registerForm\"\r\n          :model=\"registerForm\"\r\n          :rules=\"registerRules\"\r\n          label-width=\"80px\"\r\n          class=\"register-form\"\r\n          @submit.prevent\r\n        >\r\n          <el-form-item label=\"账号\" prop=\"username\">\r\n            <el-input\r\n              v-model=\"registerForm.username\"\r\n              placeholder=\"请输入账号\"\r\n            />\r\n          </el-form-item>\r\n          <el-form-item label=\"密码\" prop=\"password\">\r\n            <el-input\r\n              v-model=\"registerForm.password\"\r\n              type=\"password\"\r\n              placeholder=\"请输入密码\"\r\n            />\r\n          </el-form-item>\r\n          <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\r\n            <el-input\r\n              v-model=\"registerForm.confirmPassword\"\r\n              type=\"password\"\r\n              placeholder=\"请再次输入密码\"\r\n            />\r\n          </el-form-item>\r\n          <el-form-item label=\"姓名\" prop=\"realName\">\r\n            <el-input\r\n              v-model=\"registerForm.realName\"\r\n              placeholder=\"请输入姓名\"\r\n            />\r\n          </el-form-item>\r\n          <el-form-item label=\"手机号\" prop=\"phone\">\r\n            <el-input v-model=\"registerForm.phone\" placeholder=\"请输入手机号\" />\r\n          </el-form-item>\r\n          <el-form-item label=\"邮箱\" prop=\"email\">\r\n            <el-input v-model=\"registerForm.email\" placeholder=\"请输入邮箱\" />\r\n          </el-form-item>\r\n          <el-form-item label=\"身份\" prop=\"role\">\r\n            <el-select\r\n              v-model=\"registerForm.role\"\r\n              placeholder=\"请选择身份\"\r\n              style=\"width: 100%\"\r\n              :disabled=\"true\"\r\n            >\r\n              <el-option label=\"读者\" value=\"user\" />\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button\r\n              type=\"primary\"\r\n              :loading=\"registerLoading\"\r\n              style=\"width: 100%\"\r\n              @click=\"handleRegister\"\r\n            >\r\n              注册\r\n            </el-button>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"text\" @click=\"goLogin\">已有账号？去登录</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Message } from \"element-ui\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"Register\",\r\n  data() {\r\n    return {\r\n      registerForm: {\r\n        username: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        realName: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n        role: \"user\", // 默认只能注册为读者\r\n      },\r\n      registerLoading: false,\r\n      registerRules: {\r\n        username: [{ required: true, message: \"请输入账号\", trigger: \"blur\" }],\r\n        password: [\r\n          { required: true, message: \"请输入密码\", trigger: \"blur\" },\r\n          { min: 6, max: 20, message: \"密码长度6-20位\", trigger: \"blur\" },\r\n        ],\r\n        confirmPassword: [\r\n          { required: true, message: \"请确认密码\", trigger: \"blur\" },\r\n          {\r\n            validator: (rule, value, callback) => {\r\n              if (value !== this.registerForm.password) {\r\n                callback(\"两次输入密码不一致\");\r\n              } else {\r\n                callback();\r\n              }\r\n            },\r\n            trigger: \"blur\",\r\n          },\r\n        ],\r\n        realName: [{ required: true, message: \"请输入姓名\", trigger: \"blur\" }],\r\n        phone: [{ required: true, message: \"请输入手机号\", trigger: \"blur\" }],\r\n        email: [\r\n          { required: true, message: \"请输入邮箱\", trigger: \"blur\" },\r\n          { type: \"email\", message: \"邮箱格式不正确\", trigger: \"blur\" },\r\n        ],\r\n        role: [{ required: true, message: \"请选择身份\", trigger: \"change\" }],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    handleRegister() {\r\n      this.$refs.registerForm.validate((valid) => {\r\n        if (!valid) return;\r\n        this.registerLoading = true;\r\n        axios\r\n          .post(\"/api/users/register\", {\r\n            username: this.registerForm.username,\r\n            password: this.registerForm.password,\r\n            realName: this.registerForm.realName,\r\n            phone: this.registerForm.phone,\r\n            email: this.registerForm.email,\r\n            role: this.registerForm.role,\r\n          })\r\n          .then((res) => {\r\n            this.registerLoading = false;\r\n            if (res.data && res.data.success) {\r\n              Message.success(\"注册成功，请登录\");\r\n              this.$router.push({ path: \"/login\" });\r\n            } else {\r\n              Message.error(\r\n                res.data && res.data.message ? res.data.message : \"注册失败\"\r\n              );\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            this.registerLoading = false;\r\n            let msg = \"注册失败\";\r\n            // 405错误处理提示\r\n            if (err.response && err.response.status === 405) {\r\n              msg = \"后端接口不支持POST方法，请联系管理员或后端开发修正接口\";\r\n            } else if (\r\n              err.response &&\r\n              err.response.data &&\r\n              err.response.data.message\r\n            ) {\r\n              msg = err.response.data.message;\r\n            }\r\n            Message.error(msg);\r\n          });\r\n      });\r\n    },\r\n    goLogin() {\r\n      this.$router.push({ path: \"/login\" });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.register-bg {\r\n  min-height: 100vh;\r\n  width: 100vw;\r\n  background: url(\"/public/背景.jpg\") no-repeat center center fixed;\r\n  background-size: cover;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.register-center {\r\n  width: 100vw;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.register-box {\r\n  background: #fff;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 32px 0 rgba(0, 0, 0, 0.1);\r\n  padding: 40px 36px 32px 36px;\r\n  min-width: 320px;\r\n  max-width: 360px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n.register-title {\r\n  text-align: center;\r\n  margin-bottom: 32px;\r\n  color: #409eff;\r\n  font-weight: bold;\r\n  font-size: 24px;\r\n  letter-spacing: 2px;\r\n}\r\n.register-form {\r\n  width: 100%;\r\n}\r\n@media (max-width: 600px) {\r\n  .register-box {\r\n    padding: 24px 10px 18px 10px;\r\n    min-width: 0;\r\n    max-width: 98vw;\r\n  }\r\n  .register-title {\r\n    font-size: 18px;\r\n    margin-bottom: 18px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}