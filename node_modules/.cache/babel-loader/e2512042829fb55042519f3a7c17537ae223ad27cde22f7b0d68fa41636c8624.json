{"ast":null,"code":"import _regenerator from \"D:/\\u56FE\\u4E66\\u7BA1\\u7406\\u7CFB\\u7EDF/library/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _objectSpread from \"D:/\\u56FE\\u4E66\\u7BA1\\u7406\\u7CFB\\u7EDF/library/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"D:/\\u56FE\\u4E66\\u7BA1\\u7406\\u7CFB\\u7EDF/library/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport Sidebar from \"@/components/Sidebar.vue\";\nimport Breadcrumb from \"@/components/Breadcrumb.vue\";\nfunction getCurrentUser() {\n  try {\n    if (typeof window !== \"undefined\") {\n      var w = eval(\"window\");\n      if (w && w.localStorage) {\n        var userStr = w.localStorage.getItem(\"user\");\n        if (userStr) return JSON.parse(userStr);\n      }\n    }\n  } catch (e) {\n    // ignore error\n  }\n  return {};\n}\nexport default {\n  name: \"Profile\",\n  components: {\n    Sidebar: Sidebar,\n    Breadcrumb: Breadcrumb\n  },\n  data: function data() {\n    return {\n      user: getCurrentUser(),\n      showEdit: false,\n      editForm: {\n        realName: \"\",\n        email: \"\"\n      },\n      editRules: {\n        realName: [{\n          required: true,\n          message: \"请输入姓名\",\n          trigger: \"blur\"\n        }, {\n          min: 2,\n          max: 20,\n          message: \"姓名长度2-20位\",\n          trigger: \"blur\"\n        }],\n        email: [{\n          type: \"email\",\n          message: \"邮箱格式不正确\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  mounted: function mounted() {\n    // 未登录则跳转到登录页\n    if (!this.user || !this.user.username) {\n      this.$router.replace({\n        path: \"/login\"\n      });\n    }\n    // 不再在这里赋值 editForm\n  },\n  methods: {\n    openEditDialog: function openEditDialog() {\n      // 深拷贝，防止引用污染\n      var user = this.user || {};\n      this.editForm = JSON.parse(JSON.stringify({\n        realName: user.realName || \"\",\n        email: user.email || \"\"\n      }));\n      this.showEdit = true;\n    },\n    handleSave: function handleSave() {\n      var _this = this;\n      this.$refs.editFormRef.validate(/*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee(valid) {\n          var submitUser, res, w, newUser, _t;\n          return _regenerator().w(function (_context) {\n            while (1) switch (_context.n) {\n              case 0:\n                if (valid) {\n                  _context.n = 1;\n                  break;\n                }\n                return _context.a(2);\n              case 1:\n                if (!(_this.editForm.realName === (_this.user.realName || \"\") && _this.editForm.email === (_this.user.email || \"\"))) {\n                  _context.n = 2;\n                  break;\n                }\n                _this.$message.info(\"信息未修改，无需保存\");\n                return _context.a(2);\n              case 2:\n                // 过滤掉 createTime、updateTime 字段，避免后端报错\n                submitUser = _objectSpread({}, _this.user);\n                delete submitUser.createTime;\n                delete submitUser.updateTime;\n                // 只允许修改姓名和邮箱\n                submitUser.realName = _this.editForm.realName;\n                submitUser.email = _this.editForm.email;\n                // 角色和状态类型兼容\n                if (submitUser.role === \"管理员\") submitUser.role = 1;\n                if (submitUser.role === \"读者\" || submitUser.role === undefined) submitUser.role = 2;\n                if (submitUser.status === \"正常\") submitUser.status = 1;\n                if (submitUser.status === \"禁用\") submitUser.status = 0;\n                _context.p = 3;\n                _context.n = 4;\n                return _this.$axios.put(\"/api/users/\".concat(_this.user.id), submitUser);\n              case 4:\n                res = _context.v;\n                if (res && res.data) {\n                  // 更新 localStorage\n                  w = eval(\"window\");\n                  if (w && w.localStorage) {\n                    newUser = _objectSpread(_objectSpread({}, _this.user), {}, {\n                      realName: _this.editForm.realName,\n                      email: _this.editForm.email\n                    });\n                    w.localStorage.setItem(\"user\", JSON.stringify(newUser));\n                  }\n                  _this.user.realName = _this.editForm.realName;\n                  _this.user.email = _this.editForm.email;\n                  _this.showEdit = false;\n                  _this.$message.success(\"修改成功\");\n                }\n                _context.n = 6;\n                break;\n              case 5:\n                _context.p = 5;\n                _t = _context.v;\n                _this.$message.error(\"修改失败，请稍后重试\");\n              case 6:\n                return _context.a(2);\n            }\n          }, _callee, null, [[3, 5]]);\n        }));\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }\n};","map":{"version":3,"names":["Sidebar","Breadcrumb","getCurrentUser","window","w","eval","localStorage","userStr","getItem","JSON","parse","e","name","components","data","user","showEdit","editForm","realName","email","editRules","required","message","trigger","min","max","type","mounted","username","$router","replace","path","methods","openEditDialog","stringify","handleSave","_this","$refs","editFormRef","validate","_ref","_asyncToGenerator","_regenerator","m","_callee","valid","submitUser","res","newUser","_t","_context","n","a","$message","info","_objectSpread","createTime","updateTime","role","undefined","status","p","$axios","put","concat","id","v","setItem","success","error","_x","apply","arguments"],"sources":["src/views/Profile.vue"],"sourcesContent":["<template>\r\n  <div class=\"profile-layout\">\r\n    <Sidebar class=\"sidebar\" :active-menu=\"'/profile'\" />\r\n    <div class=\"main-content\">\r\n      <Breadcrumb :items=\"[{ text: '个人信息' }]\" />\r\n      <div class=\"content-area\">\r\n        <el-card>\r\n          <h2>个人信息</h2>\r\n          <el-descriptions :column=\"1\" border>\r\n            <el-descriptions-item label=\"用户名\">{{\r\n              user.username\r\n            }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"姓名\">{{\r\n              user.realName || \"-\"\r\n            }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"角色\">{{\r\n              user.role === 1 ? \"管理员\" : \"读者\"\r\n            }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"邮箱\">{{\r\n              user.email || \"-\"\r\n            }}</el-descriptions-item>\r\n            <el-descriptions-item label=\"注册时间\">{{\r\n              user.createTime || \"-\"\r\n            }}</el-descriptions-item>\r\n          </el-descriptions>\r\n          <div style=\"margin-top: 16px; text-align: right\">\r\n            <el-button type=\"primary\" @click=\"openEditDialog\">编辑</el-button>\r\n          </div>\r\n        </el-card>\r\n        <el-dialog :visible.sync=\"showEdit\" title=\"编辑个人信息\" width=\"400px\">\r\n          <el-form\r\n            :model=\"editForm\"\r\n            :rules=\"editRules\"\r\n            ref=\"editFormRef\"\r\n            label-width=\"70px\"\r\n          >\r\n            <el-form-item label=\"姓名\" prop=\"realName\">\r\n              <el-input v-model=\"editForm.realName\" maxlength=\"20\" />\r\n            </el-form-item>\r\n            <el-form-item label=\"邮箱\" prop=\"email\">\r\n              <el-input v-model=\"editForm.email\" maxlength=\"50\" />\r\n            </el-form-item>\r\n          </el-form>\r\n          <template #footer>\r\n            <el-button @click=\"showEdit = false\">取消</el-button>\r\n            <el-button type=\"primary\" @click=\"handleSave\">保存</el-button>\r\n          </template>\r\n        </el-dialog>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Sidebar from \"@/components/Sidebar.vue\";\r\nimport Breadcrumb from \"@/components/Breadcrumb.vue\";\r\n\r\nfunction getCurrentUser() {\r\n  try {\r\n    if (typeof window !== \"undefined\") {\r\n      const w = eval(\"window\");\r\n      if (w && w.localStorage) {\r\n        const userStr = w.localStorage.getItem(\"user\");\r\n        if (userStr) return JSON.parse(userStr);\r\n      }\r\n    }\r\n  } catch (e) {\r\n    // ignore error\r\n  }\r\n  return {};\r\n}\r\n\r\nexport default {\r\n  name: \"Profile\",\r\n  components: { Sidebar, Breadcrumb },\r\n  data() {\r\n    return {\r\n      user: getCurrentUser(),\r\n      showEdit: false,\r\n      editForm: {\r\n        realName: \"\",\r\n        email: \"\",\r\n      },\r\n      editRules: {\r\n        realName: [\r\n          { required: true, message: \"请输入姓名\", trigger: \"blur\" },\r\n          { min: 2, max: 20, message: \"姓名长度2-20位\", trigger: \"blur\" },\r\n        ],\r\n        email: [{ type: \"email\", message: \"邮箱格式不正确\", trigger: \"blur\" }],\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n    // 未登录则跳转到登录页\r\n    if (!this.user || !this.user.username) {\r\n      this.$router.replace({ path: \"/login\" });\r\n    }\r\n    // 不再在这里赋值 editForm\r\n  },\r\n  methods: {\r\n    openEditDialog() {\r\n      // 深拷贝，防止引用污染\r\n      const user = this.user || {};\r\n      this.editForm = JSON.parse(\r\n        JSON.stringify({\r\n          realName: user.realName || \"\",\r\n          email: user.email || \"\",\r\n        })\r\n      );\r\n      this.showEdit = true;\r\n    },\r\n    handleSave() {\r\n      this.$refs.editFormRef.validate(async (valid) => {\r\n        if (!valid) return;\r\n        // 判断是否与原信息重复\r\n        if (\r\n          this.editForm.realName === (this.user.realName || \"\") &&\r\n          this.editForm.email === (this.user.email || \"\")\r\n        ) {\r\n          this.$message.info(\"信息未修改，无需保存\");\r\n          return;\r\n        }\r\n        // 过滤掉 createTime、updateTime 字段，避免后端报错\r\n        const submitUser = { ...this.user };\r\n        delete submitUser.createTime;\r\n        delete submitUser.updateTime;\r\n        // 只允许修改姓名和邮箱\r\n        submitUser.realName = this.editForm.realName;\r\n        submitUser.email = this.editForm.email;\r\n        // 角色和状态类型兼容\r\n        if (submitUser.role === \"管理员\") submitUser.role = 1;\r\n        if (submitUser.role === \"读者\" || submitUser.role === undefined)\r\n          submitUser.role = 2;\r\n        if (submitUser.status === \"正常\") submitUser.status = 1;\r\n        if (submitUser.status === \"禁用\") submitUser.status = 0;\r\n        try {\r\n          const res = await this.$axios.put(\r\n            `/api/users/${this.user.id}`,\r\n            submitUser\r\n          );\r\n          if (res && res.data) {\r\n            // 更新 localStorage\r\n            const w = eval(\"window\");\r\n            if (w && w.localStorage) {\r\n              const newUser = {\r\n                ...this.user,\r\n                realName: this.editForm.realName,\r\n                email: this.editForm.email,\r\n              };\r\n              w.localStorage.setItem(\"user\", JSON.stringify(newUser));\r\n            }\r\n            this.user.realName = this.editForm.realName;\r\n            this.user.email = this.editForm.email;\r\n            this.showEdit = false;\r\n            this.$message.success(\"修改成功\");\r\n          }\r\n        } catch (e) {\r\n          this.$message.error(\"修改失败，请稍后重试\");\r\n        }\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.profile-layout {\r\n  display: flex;\r\n  min-height: 100vh;\r\n  background: #f5f7fa;\r\n}\r\n.sidebar {\r\n  width: 220px;\r\n  background: #fff;\r\n  border-right: 1px solid #e6e6e6;\r\n}\r\n.main-content {\r\n  flex: 1;\r\n  padding: 24px;\r\n}\r\n.content-area {\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.04);\r\n  padding: 24px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}