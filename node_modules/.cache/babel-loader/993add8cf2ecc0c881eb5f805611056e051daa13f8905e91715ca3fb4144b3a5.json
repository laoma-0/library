{"ast":null,"code":"import _toConsumableArray from \"D:/\\u56FE\\u4E66\\u7BA1\\u7406\\u7CFB\\u7EDF/library/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"D:/\\u56FE\\u4E66\\u7BA1\\u7406\\u7CFB\\u7EDF/library/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\n/* global console */\n\n/* eslint-disable no-console */\nimport Sidebar from \"@/components/Sidebar.vue\";\nimport Breadcrumb from \"@/components/Breadcrumb.vue\";\nimport HeaderBar from \"@/components/HeaderBar.vue\";\nimport UserSearch from \"@/components/UserSearch.vue\";\nimport UserTable from \"@/components/UserTable.vue\";\nimport UserForm from \"@/components/UserForm.vue\";\nimport Swal from \"sweetalert2\";\nexport default {\n  name: \"UserManagement\",\n  components: {\n    Sidebar: Sidebar,\n    Breadcrumb: Breadcrumb,\n    HeaderBar: HeaderBar,\n    UserSearch: UserSearch,\n    UserTable: UserTable,\n    UserForm: UserForm\n  },\n  data: function data() {\n    return {\n      breadcrumbItems: [{\n        text: \"用户管理\"\n      }],\n      users: [],\n      filteredUsers: [],\n      page: 1,\n      pageSize: 10,\n      multipleSelection: [],\n      showUserForm: false,\n      currentUser: null,\n      sortProp: \"\",\n      sortOrder: \"\",\n      searchParams: {},\n      // 新增：保存搜索条件\n      total: 0 // 新增：总条数\n    };\n  },\n  computed: {\n    pagedUsers: function pagedUsers() {\n      // 直接返回filteredUsers（接口返回的当前页数据）\n      return this.filteredUsers;\n    }\n  },\n  watch: {\n    multipleSelection: function multipleSelection() {\n      // 仅用于触发视图更新，修复批量删除按钮状态\n    }\n  },\n  created: function created() {\n    // 登录校验：未登录则跳转到登录页\n    var user = null;\n    try {\n      // 通过 eval 间接访问 window，最大限度避免静态分析和环境限制\n      var w = eval(\"window\");\n      if (w && w.localStorage) {\n        user = w.localStorage.getItem(\"user\");\n      }\n    } catch (e) {\n      // 忽略异常\n    }\n    if (!user) {\n      this.$router.replace({\n        path: \"/login\"\n      });\n      return;\n    }\n    // 只用分页参数，不带 searchParams，确保首次加载显示全部\n    this.page = 1;\n    this.searchParams = {};\n    this.fetchUsers({\n      page: 1,\n      size: this.pageSize\n    });\n  },\n  methods: {\n    fetchUsers: function fetchUsers() {\n      var _this = this;\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      // 只在有搜索/重置时才合并 this.searchParams\n      var query = _objectSpread(_objectSpread({\n        page: params.page || this.page,\n        size: params.size || this.pageSize\n      }, params && Object.keys(params).some(function (k) {\n        return k !== \"page\" && k !== \"size\";\n      }) ? this.searchParams : {}), params);\n      this.$axios ? this.$axios.get(\"/api/users\", {\n        params: query\n      }).then(function (res) {\n        // 更详细的调试输出\n        console.log(\"用户接口返回：\", res.data);\n\n        // 兼容多种常见结构\n        var list = [];\n        var total = 0;\n        if (res.data) {\n          if (Array.isArray(res.data.data)) {\n            list = res.data.data;\n            total = res.data.total || res.data.count || 0;\n          } else if (Array.isArray(res.data.list)) {\n            list = res.data.list;\n            total = res.data.total || res.data.count || 0;\n          } else if (Array.isArray(res.data)) {\n            list = res.data;\n            total = res.data.length;\n          }\n        }\n        console.log(\"最终用户列表：\", list, \"总数：\", total);\n\n        // 容错：list不是数组时，赋空数组\n        if (!Array.isArray(list)) list = [];\n        _this.filteredUsers = list.map(function (u) {\n          return _objectSpread(_objectSpread({}, u), {}, {\n            // 展示真实姓名 realName 字段\n            realName: u.realName || u.real_name || \"\",\n            status: u.status === 1 || u.status === \"1\" ? \"正常\" : u.status === 0 || u.status === \"0\" ? \"禁用\" : u.status,\n            type: u.role === 1 || u.role === \"1\" ? \"管理员\" : u.role === 2 || u.role === \"2\" ? \"普通用户\" : u.role || \"其他\",\n            createTime: u.createTime ? typeof u.createTime === \"string\" ? u.createTime.replace(\"T\", \" \") : u.createTime : u.create_time || \"\"\n          });\n        });\n        _this.total = total;\n      })[\"catch\"](function (err) {\n        console.error(\"用户接口异常：\", err);\n        _this.filteredUsers = [];\n        _this.total = 0;\n      }) : null;\n    },\n    handleSearch: function handleSearch(params) {\n      this.page = 1;\n      this.searchParams = params;\n      this.fetchUsers(_objectSpread(_objectSpread({}, params), {}, {\n        page: 1\n      }));\n    },\n    handleReset: function handleReset() {\n      this.page = 1;\n      this.searchParams = {};\n      this.fetchUsers({\n        page: 1\n      });\n    },\n    openUserForm: function openUserForm(user) {\n      if (user) {\n        // 兼容性别字段，若无则默认空\n        this.currentUser = _objectSpread(_objectSpread({}, user), {}, {\n          gender: user.gender || \"\"\n        });\n      } else {\n        this.currentUser = null;\n      }\n      this.showUserForm = true;\n    },\n    handleUserSubmit: function handleUserSubmit(user) {\n      var _this2 = this;\n      console.log(\"Sending user data:\", user); // 新增：调试输出\n      // 过滤掉 createTime、updateTime 字段，避免前端传递字符串导致后端 LocalDateTime 反序列化报错\n      var userData = _objectSpread({}, user);\n      delete userData.createTime;\n      delete userData.updateTime;\n      if (user.id) {\n        // 编辑\n        var submitUser = _objectSpread(_objectSpread({}, userData), {}, {\n          status: user.status === \"正常\" ? 1 : user.status === \"禁用\" ? 0 : user.status,\n          role: user.type === \"管理员\" ? 1 : user.type === \"普通用户\" ? 2 : user.role\n        });\n        this.$axios ? this.$axios.put(\"/api/users/\".concat(user.id), submitUser).then(function () {\n          _this2.fetchUsers();\n          _this2.showUserForm = false;\n          Swal.fire({\n            icon: \"success\",\n            title: \"编辑成功\",\n            timer: 1200,\n            showConfirmButton: false\n          });\n        })[\"catch\"](function (err) {\n          _this2.$message.error(err.response && err.response.data && err.response.data.message ? err.response.data.message : \"编辑用户失败\");\n        }) : null;\n      } else {\n        // 新增\n        var _submitUser = _objectSpread(_objectSpread({}, userData), {}, {\n          status: user.status === \"正常\" ? 1 : user.status === \"禁用\" ? 0 : user.status,\n          role: user.type === \"管理员\" ? 1 : user.type === \"普通用户\" ? 2 : user.role\n        });\n        this.$axios ? this.$axios.post(\"/api/users\", _submitUser).then(function () {\n          _this2.fetchUsers();\n          _this2.showUserForm = false;\n          Swal.fire({\n            icon: \"success\",\n            title: \"添加成功\",\n            timer: 1200,\n            showConfirmButton: false\n          });\n        })[\"catch\"](function (err) {\n          _this2.$message.error(err.response && err.response.data && err.response.data.message ? err.response.data.message : \"添加用户失败\");\n        }) : null;\n      }\n    },\n    handleDelete: function handleDelete(user) {\n      var _this3 = this;\n      if (user && user.type === \"管理员\") {\n        this.$message.warning(\"管理员账号不允许删除\");\n        return;\n      }\n      this.$confirm(\"确定删除该用户吗？\", \"提示\", {\n        type: \"warning\"\n      }).then(function () {\n        _this3.$axios ? _this3.$axios[\"delete\"](\"/api/users/\".concat(user.id)).then(function () {\n          _this3.fetchUsers();\n          Swal.fire({\n            icon: \"success\",\n            title: \"删除成功\",\n            timer: 1200,\n            showConfirmButton: false\n          });\n        }) : null;\n      })[\"catch\"](function () {});\n    },\n    handleBatchDelete: function handleBatchDelete() {\n      var _this4 = this;\n      var adminUsers = this.multipleSelection.filter(function (u) {\n        return u.type === \"管理员\";\n      });\n      if (adminUsers.length > 0) {\n        this.$message.warning(\"管理员账号不允许批量删除\");\n        return;\n      }\n      this.$confirm(\"确定批量删除所选用户吗？\", \"提示\", {\n        type: \"warning\"\n      }).then(function () {\n        var ids = _this4.multipleSelection.map(function (u) {\n          return u.id;\n        });\n        if (!ids.length) {\n          _this4.$message.warning(\"请先勾选要删除的用户\");\n          return;\n        }\n        _this4.$axios ? _this4.$axios[\"delete\"](\"/api/users/batch\", {\n          data: {\n            ids: ids\n          }\n        }).then(function () {\n          Swal.fire({\n            icon: \"success\",\n            title: \"批量删除成功\",\n            timer: 1200,\n            showConfirmButton: false\n          });\n          _this4.fetchUsers();\n          _this4.multipleSelection = [];\n        })[\"catch\"](function (err) {\n          _this4.$message.error(err.response && err.response.data && err.response.data.message ? err.response.data.message : \"批量删除失败\");\n        }) : null;\n      })[\"catch\"](function () {});\n    },\n    handleExport: function handleExport(command) {\n      if (command === \"export\") {\n        this.$message.info(\"该功能待开发中！！！\");\n      }\n    },\n    handleStatusChange: function handleStatusChange(user) {\n      var _this5 = this;\n      if (user && user.type === \"管理员\") {\n        this.$message.warning(\"管理员账号不允许禁用\");\n        return;\n      }\n      var newStatus = user.status === \"正常\" ? \"禁用\" : \"正常\";\n      this.$axios ? this.$axios.patch(\"/api/users/\".concat(user.id, \"/status\"), {\n        status: newStatus\n      }).then(function () {\n        _this5.fetchUsers();\n      }) : null;\n    },\n    handleSortChange: function handleSortChange(_ref) {\n      var prop = _ref.prop,\n        order = _ref.order;\n      this.sortProp = prop;\n      this.sortOrder = order;\n      // 可选：后端排序，或前端排序\n      if (!order) return;\n      var sortFn = function sortFn(a, b) {\n        if (a[prop] > b[prop]) return order === \"ascending\" ? 1 : -1;\n        if (a[prop] < b[prop]) return order === \"ascending\" ? -1 : 1;\n        return 0;\n      };\n      this.filteredUsers = _toConsumableArray(this.filteredUsers).sort(sortFn);\n    },\n    handlePageChange: function handlePageChange(page) {\n      this.page = page;\n      this.fetchUsers({\n        page: page\n      });\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n    }\n  }\n};","map":{"version":3,"names":["Sidebar","Breadcrumb","HeaderBar","UserSearch","UserTable","UserForm","Swal","name","components","data","breadcrumbItems","text","users","filteredUsers","page","pageSize","multipleSelection","showUserForm","currentUser","sortProp","sortOrder","searchParams","total","computed","pagedUsers","watch","created","user","w","eval","localStorage","getItem","e","$router","replace","path","fetchUsers","size","methods","_this","params","arguments","length","undefined","query","_objectSpread","Object","keys","some","k","$axios","get","then","res","console","log","list","Array","isArray","count","map","u","realName","real_name","status","type","role","createTime","create_time","err","error","handleSearch","handleReset","openUserForm","gender","handleUserSubmit","_this2","userData","updateTime","id","submitUser","put","concat","fire","icon","title","timer","showConfirmButton","$message","response","message","post","handleDelete","_this3","warning","$confirm","handleBatchDelete","_this4","adminUsers","filter","ids","handleExport","command","info","handleStatusChange","_this5","newStatus","patch","handleSortChange","_ref","prop","order","sortFn","a","b","_toConsumableArray","sort","handlePageChange","handleSelectionChange","val"],"sources":["src/views/UserManagement.vue"],"sourcesContent":["<template>\r\n  <div style=\"display: flex; height: 100vh; flex-direction: column\">\r\n    <HeaderBar />\r\n    <div style=\"display: flex; flex: 1; min-height: 0\">\r\n      <Sidebar class=\"sidebar\" :active-menu=\"'/user-management'\" />\r\n      <div class=\"main-content\">\r\n        <Breadcrumb :items=\"breadcrumbItems\" />\r\n        <div class=\"content-area\">\r\n          <UserSearch @search=\"handleSearch\" @reset=\"handleReset\" />\r\n          <div class=\"actions\">\r\n            <el-button type=\"primary\" @click=\"openUserForm()\">\r\n              添加用户\r\n            </el-button>\r\n            <el-button\r\n              type=\"danger\"\r\n              :disabled=\"!multipleSelection.length\"\r\n              @click=\"handleBatchDelete\"\r\n            >\r\n              批量删除\r\n            </el-button>\r\n            <el-dropdown @command=\"handleExport\">\r\n              <el-button>\r\n                更多操作\r\n                <i class=\"el-icon-arrow-down el-icon--right\" />\r\n              </el-button>\r\n              <template #dropdown>\r\n                <el-dropdown-menu>\r\n                  <el-dropdown-item command=\"export\">\r\n                    导出所选数据\r\n                  </el-dropdown-item>\r\n                </el-dropdown-menu>\r\n              </template>\r\n            </el-dropdown>\r\n          </div>\r\n          <!-- <pre>{{ pagedUsers }}</pre> -->\r\n          <UserTable\r\n            :users=\"pagedUsers\"\r\n            :total=\"total\"\r\n            :page=\"page\"\r\n            :page-size=\"pageSize\"\r\n            @selection-change=\"handleSelectionChange\"\r\n            @edit=\"openUserForm\"\r\n            @delete=\"handleDelete\"\r\n            @status-change=\"handleStatusChange\"\r\n            @sort-change=\"handleSortChange\"\r\n            @page-change=\"handlePageChange\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <UserForm\r\n      v-if=\"showUserForm\"\r\n      :user=\"currentUser\"\r\n      :visible=\"showUserForm\"\r\n      @update:visible=\"showUserForm = $event\"\r\n      @submit=\"handleUserSubmit\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/* global console */\r\n\r\n/* eslint-disable no-console */\r\nimport Sidebar from \"@/components/Sidebar.vue\";\r\nimport Breadcrumb from \"@/components/Breadcrumb.vue\";\r\nimport HeaderBar from \"@/components/HeaderBar.vue\";\r\nimport UserSearch from \"@/components/UserSearch.vue\";\r\nimport UserTable from \"@/components/UserTable.vue\";\r\nimport UserForm from \"@/components/UserForm.vue\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default {\r\n  name: \"UserManagement\",\r\n  components: {\r\n    Sidebar,\r\n    Breadcrumb,\r\n    HeaderBar,\r\n    UserSearch,\r\n    UserTable,\r\n    UserForm,\r\n  },\r\n  data() {\r\n    return {\r\n      breadcrumbItems: [{ text: \"用户管理\" }],\r\n      users: [],\r\n      filteredUsers: [],\r\n      page: 1,\r\n      pageSize: 10,\r\n      multipleSelection: [],\r\n      showUserForm: false,\r\n      currentUser: null,\r\n      sortProp: \"\",\r\n      sortOrder: \"\",\r\n      searchParams: {}, // 新增：保存搜索条件\r\n      total: 0, // 新增：总条数\r\n    };\r\n  },\r\n  computed: {\r\n    pagedUsers() {\r\n      // 直接返回filteredUsers（接口返回的当前页数据）\r\n      return this.filteredUsers;\r\n    },\r\n  },\r\n  watch: {\r\n    multipleSelection() {\r\n      // 仅用于触发视图更新，修复批量删除按钮状态\r\n    },\r\n  },\r\n  created() {\r\n    // 登录校验：未登录则跳转到登录页\r\n    let user = null;\r\n    try {\r\n      // 通过 eval 间接访问 window，最大限度避免静态分析和环境限制\r\n      const w = eval(\"window\");\r\n      if (w && w.localStorage) {\r\n        user = w.localStorage.getItem(\"user\");\r\n      }\r\n    } catch (e) {\r\n      // 忽略异常\r\n    }\r\n    if (!user) {\r\n      this.$router.replace({ path: \"/login\" });\r\n      return;\r\n    }\r\n    // 只用分页参数，不带 searchParams，确保首次加载显示全部\r\n    this.page = 1;\r\n    this.searchParams = {};\r\n    this.fetchUsers({ page: 1, size: this.pageSize });\r\n  },\r\n  methods: {\r\n    fetchUsers(params = {}) {\r\n      // 只在有搜索/重置时才合并 this.searchParams\r\n      const query = {\r\n        page: params.page || this.page,\r\n        size: params.size || this.pageSize,\r\n        ...(params &&\r\n        Object.keys(params).some((k) => k !== \"page\" && k !== \"size\")\r\n          ? this.searchParams\r\n          : {}),\r\n        ...params,\r\n      };\r\n      this.$axios\r\n        ? this.$axios\r\n            .get(\"/api/users\", { params: query })\r\n            .then((res) => {\r\n              // 更详细的调试输出\r\n              console.log(\"用户接口返回：\", res.data);\r\n\r\n              // 兼容多种常见结构\r\n              let list = [];\r\n              let total = 0;\r\n              if (res.data) {\r\n                if (Array.isArray(res.data.data)) {\r\n                  list = res.data.data;\r\n                  total = res.data.total || res.data.count || 0;\r\n                } else if (Array.isArray(res.data.list)) {\r\n                  list = res.data.list;\r\n                  total = res.data.total || res.data.count || 0;\r\n                } else if (Array.isArray(res.data)) {\r\n                  list = res.data;\r\n                  total = res.data.length;\r\n                }\r\n              }\r\n              console.log(\"最终用户列表：\", list, \"总数：\", total);\r\n\r\n              // 容错：list不是数组时，赋空数组\r\n              if (!Array.isArray(list)) list = [];\r\n\r\n              this.filteredUsers = list.map((u) => ({\r\n                ...u,\r\n                // 展示真实姓名 realName 字段\r\n                realName: u.realName || u.real_name || \"\",\r\n                status:\r\n                  u.status === 1 || u.status === \"1\"\r\n                    ? \"正常\"\r\n                    : u.status === 0 || u.status === \"0\"\r\n                    ? \"禁用\"\r\n                    : u.status,\r\n                type:\r\n                  u.role === 1 || u.role === \"1\"\r\n                    ? \"管理员\"\r\n                    : u.role === 2 || u.role === \"2\"\r\n                    ? \"普通用户\"\r\n                    : u.role || \"其他\",\r\n                createTime: u.createTime\r\n                  ? typeof u.createTime === \"string\"\r\n                    ? u.createTime.replace(\"T\", \" \")\r\n                    : u.createTime\r\n                  : u.create_time || \"\",\r\n              }));\r\n              this.total = total;\r\n            })\r\n            .catch((err) => {\r\n              console.error(\"用户接口异常：\", err);\r\n              this.filteredUsers = [];\r\n              this.total = 0;\r\n            })\r\n        : null;\r\n    },\r\n    handleSearch(params) {\r\n      this.page = 1;\r\n      this.searchParams = params;\r\n      this.fetchUsers({ ...params, page: 1 });\r\n    },\r\n    handleReset() {\r\n      this.page = 1;\r\n      this.searchParams = {};\r\n      this.fetchUsers({ page: 1 });\r\n    },\r\n    openUserForm(user) {\r\n      if (user) {\r\n        // 兼容性别字段，若无则默认空\r\n        this.currentUser = {\r\n          ...user,\r\n          gender: user.gender || \"\",\r\n        };\r\n      } else {\r\n        this.currentUser = null;\r\n      }\r\n      this.showUserForm = true;\r\n    },\r\n    handleUserSubmit(user) {\r\n      console.log(\"Sending user data:\", user); // 新增：调试输出\r\n      // 过滤掉 createTime、updateTime 字段，避免前端传递字符串导致后端 LocalDateTime 反序列化报错\r\n      const userData = { ...user };\r\n      delete userData.createTime;\r\n      delete userData.updateTime;\r\n      if (user.id) {\r\n        // 编辑\r\n        const submitUser = {\r\n          ...userData,\r\n          status:\r\n            user.status === \"正常\"\r\n              ? 1\r\n              : user.status === \"禁用\"\r\n              ? 0\r\n              : user.status,\r\n          role:\r\n            user.type === \"管理员\"\r\n              ? 1\r\n              : user.type === \"普通用户\"\r\n              ? 2\r\n              : user.role,\r\n        };\r\n        this.$axios\r\n          ? this.$axios\r\n              .put(`/api/users/${user.id}`, submitUser)\r\n              .then(() => {\r\n                this.fetchUsers();\r\n                this.showUserForm = false;\r\n                Swal.fire({\r\n                  icon: \"success\",\r\n                  title: \"编辑成功\",\r\n                  timer: 1200,\r\n                  showConfirmButton: false,\r\n                });\r\n              })\r\n              .catch((err) => {\r\n                this.$message.error(\r\n                  err.response && err.response.data && err.response.data.message\r\n                    ? err.response.data.message\r\n                    : \"编辑用户失败\"\r\n                );\r\n              })\r\n          : null;\r\n      } else {\r\n        // 新增\r\n        const submitUser = {\r\n          ...userData,\r\n          status:\r\n            user.status === \"正常\"\r\n              ? 1\r\n              : user.status === \"禁用\"\r\n              ? 0\r\n              : user.status,\r\n          role:\r\n            user.type === \"管理员\"\r\n              ? 1\r\n              : user.type === \"普通用户\"\r\n              ? 2\r\n              : user.role,\r\n        };\r\n        this.$axios\r\n          ? this.$axios\r\n              .post(\"/api/users\", submitUser)\r\n              .then(() => {\r\n                this.fetchUsers();\r\n                this.showUserForm = false;\r\n                Swal.fire({\r\n                  icon: \"success\",\r\n                  title: \"添加成功\",\r\n                  timer: 1200,\r\n                  showConfirmButton: false,\r\n                });\r\n              })\r\n              .catch((err) => {\r\n                this.$message.error(\r\n                  err.response && err.response.data && err.response.data.message\r\n                    ? err.response.data.message\r\n                    : \"添加用户失败\"\r\n                );\r\n              })\r\n          : null;\r\n      }\r\n    },\r\n    handleDelete(user) {\r\n      if (user && user.type === \"管理员\") {\r\n        this.$message.warning(\"管理员账号不允许删除\");\r\n        return;\r\n      }\r\n      this.$confirm(\"确定删除该用户吗？\", \"提示\", { type: \"warning\" })\r\n        .then(() => {\r\n          this.$axios\r\n            ? this.$axios.delete(`/api/users/${user.id}`).then(() => {\r\n                this.fetchUsers();\r\n                Swal.fire({\r\n                  icon: \"success\",\r\n                  title: \"删除成功\",\r\n                  timer: 1200,\r\n                  showConfirmButton: false,\r\n                });\r\n              })\r\n            : null;\r\n        })\r\n        .catch(() => {});\r\n    },\r\n    handleBatchDelete() {\r\n      const adminUsers = this.multipleSelection.filter(\r\n        (u) => u.type === \"管理员\"\r\n      );\r\n      if (adminUsers.length > 0) {\r\n        this.$message.warning(\"管理员账号不允许批量删除\");\r\n        return;\r\n      }\r\n      this.$confirm(\"确定批量删除所选用户吗？\", \"提示\", { type: \"warning\" })\r\n        .then(() => {\r\n          const ids = this.multipleSelection.map((u) => u.id);\r\n          if (!ids.length) {\r\n            this.$message.warning(\"请先勾选要删除的用户\");\r\n            return;\r\n          }\r\n          this.$axios\r\n            ? this.$axios\r\n                .delete(\"/api/users/batch\", { data: { ids } })\r\n                .then(() => {\r\n                  Swal.fire({\r\n                    icon: \"success\",\r\n                    title: \"批量删除成功\",\r\n                    timer: 1200,\r\n                    showConfirmButton: false,\r\n                  });\r\n                  this.fetchUsers();\r\n                  this.multipleSelection = [];\r\n                })\r\n                .catch((err) => {\r\n                  this.$message.error(\r\n                    err.response &&\r\n                      err.response.data &&\r\n                      err.response.data.message\r\n                      ? err.response.data.message\r\n                      : \"批量删除失败\"\r\n                  );\r\n                })\r\n            : null;\r\n        })\r\n        .catch(() => {});\r\n    },\r\n    handleExport(command) {\r\n      if (command === \"export\") {\r\n        this.$message.info(\"该功能待开发中！！！\");\r\n      }\r\n    },\r\n    handleStatusChange(user) {\r\n      if (user && user.type === \"管理员\") {\r\n        this.$message.warning(\"管理员账号不允许禁用\");\r\n        return;\r\n      }\r\n      const newStatus = user.status === \"正常\" ? \"禁用\" : \"正常\";\r\n      this.$axios\r\n        ? this.$axios\r\n            .patch(`/api/users/${user.id}/status`, { status: newStatus })\r\n            .then(() => {\r\n              this.fetchUsers();\r\n            })\r\n        : null;\r\n    },\r\n    handleSortChange({ prop, order }) {\r\n      this.sortProp = prop;\r\n      this.sortOrder = order;\r\n      // 可选：后端排序，或前端排序\r\n      if (!order) return;\r\n      const sortFn = (a, b) => {\r\n        if (a[prop] > b[prop]) return order === \"ascending\" ? 1 : -1;\r\n        if (a[prop] < b[prop]) return order === \"ascending\" ? -1 : 1;\r\n        return 0;\r\n      };\r\n      this.filteredUsers = [...this.filteredUsers].sort(sortFn);\r\n    },\r\n    handlePageChange(page) {\r\n      this.page = page;\r\n      this.fetchUsers({ page });\r\n    },\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.user-management-layout {\r\n  display: flex;\r\n  min-height: 100vh;\r\n  background: #f5f7fa;\r\n}\r\n.sidebar {\r\n  width: 220px;\r\n  background: #fff;\r\n  border-right: 1px solid #e6e6e6;\r\n}\r\n.main-content {\r\n  flex: 1;\r\n  padding: 24px;\r\n}\r\n.content-area {\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.04);\r\n  padding: 24px;\r\n}\r\n.actions {\r\n  margin-bottom: 16px;\r\n  display: flex;\r\n  gap: 12px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}