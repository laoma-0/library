{"ast":null,"code":"import _objectSpread from \"D:/\\u56FE\\u4E66\\u7BA1\\u7406\\u7CFB\\u7EDF/library/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport Sidebar from \"@/components/Sidebar.vue\";\nimport Breadcrumb from \"@/components/Breadcrumb.vue\";\nimport BookSearch from \"@/components/BookSearch.vue\";\nimport BookTable from \"@/components/BookTable.vue\";\n\n// 添加本地函数实现\nfunction getCurrentUser() {\n  try {\n    if (typeof window !== \"undefined\") {\n      var w = eval(\"window\");\n      if (w && w.localStorage) {\n        var userStr = w.localStorage.getItem(\"user\");\n        if (userStr) return JSON.parse(userStr);\n      }\n    }\n  } catch (e) {\n    // ignore error\n  }\n  return null;\n}\nexport default {\n  name: \"BookManagement\",\n  components: {\n    Sidebar: Sidebar,\n    Breadcrumb: Breadcrumb,\n    BookSearch: BookSearch,\n    BookTable: BookTable\n  },\n  data: function data() {\n    return {\n      breadcrumbItems: [{\n        text: \"图书列表\"\n      }],\n      books: [],\n      filteredBooks: [],\n      page: 1,\n      pageSize: 20,\n      // 每页20条\n      multipleSelection: [],\n      showBookForm: false,\n      currentBook: null,\n      total: 0,\n      searchParams: {},\n      isAdmin: false\n    };\n  },\n  computed: {\n    pagedBooks: function pagedBooks() {\n      return this.filteredBooks;\n    }\n  },\n  created: function created() {\n    // 使用导入的 getCurrentUser 函数\n    var currentUser = getCurrentUser();\n    this.isAdmin = currentUser && currentUser.role === 1;\n    this.fetchBooks();\n  },\n  methods: {\n    fetchBooks: function fetchBooks() {\n      var _this = this;\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var query = _objectSpread(_objectSpread({\n        page: this.page,\n        size: this.pageSize\n      }, this.searchParams), params);\n      this.$axios.get(\"/api/books\", {\n        params: query\n      }) // 修改接口地址为标准查询接口\n      .then(function (res) {\n        var list = [];\n        var total = 0;\n        if (res.data) {\n          if (Array.isArray(res.data.data)) {\n            list = res.data.data;\n            total = res.data.total || res.data.count || 0;\n          } else if (Array.isArray(res.data.list)) {\n            list = res.data.list;\n            total = res.data.total || res.data.count || 0;\n          } else if (Array.isArray(res.data)) {\n            list = res.data;\n            total = res.data.length;\n          }\n        }\n        if (!Array.isArray(list)) list = [];\n        _this.filteredBooks = list;\n        _this.total = total;\n      })[\"catch\"](function () {\n        _this.$message.error(\"获取图书数据失败，请稍后重试\"); // 提供用户友好的错误提示\n        _this.filteredBooks = [];\n        _this.total = 0;\n      });\n    },\n    handleSearch: function handleSearch(params) {\n      this.searchParams = params;\n      this.page = 1; // 重置到第一页\n      this.fetchBooks();\n    },\n    handleReset: function handleReset() {\n      this.searchParams = {};\n      this.page = 1;\n      this.fetchBooks();\n    },\n    handlePageChange: function handlePageChange(page) {\n      this.page = page;\n      this.fetchBooks();\n    },\n    handleSelectionChange: function handleSelectionChange(selection) {\n      this.multipleSelection = selection;\n    },\n    openBookForm: function openBookForm() {\n      var book = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      this.currentBook = book;\n      this.showBookForm = true;\n    },\n    handleBookSubmit: function handleBookSubmit(book) {\n      var _this2 = this;\n      var isEdit = !!book.id;\n      var request = isEdit ? this.$axios.put(\"/api/books/\".concat(book.id), book) : this.$axios.post(\"/api/books\", book);\n      request.then(function (res) {\n        _this2.$message.success(isEdit ? \"更新成功\" : \"添加成功\");\n        _this2.showBookForm = false;\n        _this2.fetchBooks(); // 重新获取最新数据\n      })[\"catch\"](function (err) {\n        var _err$response;\n        _this2.$message.error(((_err$response = err.response) === null || _err$response === void 0 || (_err$response = _err$response.data) === null || _err$response === void 0 ? void 0 : _err$response.message) || \"操作失败，请稍后重试\");\n      });\n    },\n    handleDelete: function handleDelete(book) {\n      var _this3 = this;\n      this.$confirm(\"\\u786E\\u8BA4\\u5220\\u9664\\u3010\".concat(book.title, \"\\u3011\\u5417\\uFF1F\"), \"提示\", {\n        type: \"warning\"\n      }).then(function () {\n        _this3.$axios[\"delete\"](\"/api/books/\".concat(book.id)).then(function () {\n          _this3.fetchBooks();\n          _this3.$message.success(\"删除成功\");\n        });\n      })[\"catch\"](function () {});\n    },\n    handleBatchDelete: function handleBatchDelete() {\n      var _this4 = this;\n      this.$confirm(\"\\u786E\\u8BA4\\u5220\\u9664\\u9009\\u4E2D\\u7684\".concat(this.multipleSelection.length, \"\\u672C\\u56FE\\u4E66\\u5417\\uFF1F\"), \"警告\", {\n        type: \"warning\"\n      }).then(function () {\n        var ids = _this4.multipleSelection.map(function (b) {\n          return b.id;\n        });\n        _this4.$axios[\"delete\"](\"/api/books/batch\", {\n          data: {\n            ids: ids\n          }\n        }).then(function () {\n          _this4.fetchBooks();\n          _this4.$message.success(\"批量删除成功\");\n        });\n      })[\"catch\"](function () {});\n    }\n  }\n};","map":{"version":3,"names":["Sidebar","Breadcrumb","BookSearch","BookTable","getCurrentUser","window","w","eval","localStorage","userStr","getItem","JSON","parse","e","name","components","data","breadcrumbItems","text","books","filteredBooks","page","pageSize","multipleSelection","showBookForm","currentBook","total","searchParams","isAdmin","computed","pagedBooks","created","currentUser","role","fetchBooks","methods","_this","params","arguments","length","undefined","query","_objectSpread","size","$axios","get","then","res","list","Array","isArray","count","$message","error","handleSearch","handleReset","handlePageChange","handleSelectionChange","selection","openBookForm","book","handleBookSubmit","_this2","isEdit","id","request","put","concat","post","success","err","_err$response","response","message","handleDelete","_this3","$confirm","title","type","handleBatchDelete","_this4","ids","map","b"],"sources":["src/views/BookManagement.vue"],"sourcesContent":["<template>\r\n  <!-- 主容器，使用 flex 布局 -->\r\n  <div style=\"display: flex; flex: 1; min-height: 0\">\r\n    <!-- 侧边栏组件，显示当前激活菜单 -->\r\n    <Sidebar class=\"sidebar\" :active-menu=\"'/book-management'\" />\r\n    <!-- 主内容区域 -->\r\n    <div class=\"main-content\">\r\n      <!-- 面包屑导航组件 -->\r\n      <Breadcrumb :items=\"breadcrumbItems\" />\r\n      <!-- 内容区域 -->\r\n      <div class=\"content-area\">\r\n        <!-- 图书搜索组件，包含搜索和重置功能 -->\r\n        <BookSearch @search=\"handleSearch\" @reset=\"handleReset\" />\r\n        <!-- 操作按钮区域 -->\r\n        <div class=\"actions\">\r\n          <!-- 添加图书按钮，仅管理员可见 -->\r\n          <el-button v-if=\"isAdmin\" type=\"primary\" @click=\"openBookForm()\">\r\n            添加图书\r\n          </el-button>\r\n          <!-- 批量删除按钮，仅管理员可见且在有选中项时可用 -->\r\n          <el-button\r\n              v-if=\"isAdmin\"\r\n              type=\"danger\"\r\n              :disabled=\"!multipleSelection.length\"\r\n              @click=\"handleBatchDelete\"\r\n          >\r\n            批量删除\r\n          </el-button>\r\n        </div>\r\n        <!-- 图书表格组件，显示图书列表 -->\r\n        <BookTable\r\n            :books=\"pagedBooks\"\r\n            :total=\"total\"\r\n            :page=\"page\"\r\n            :page-size=\"pageSize\"\r\n            :show-actions=\"isAdmin\"\r\n            @selection-change=\"handleSelectionChange\"\r\n            @edit=\"openBookForm\"\r\n            @delete=\"handleDelete\"\r\n            @page-change=\"handlePageChange\"\r\n        />\r\n        <!-- 分页组件 -->\r\n        <el-pagination\r\n            class=\"el-pagination is-background\"          \r\n            style=\"margin-top: 15px; text-align: right\"\r\n            background\r\n            layout=\"prev, pager, next, jumper\"\r\n            :page-size=\"pageSize\"\r\n            :current-page=\"page\"\r\n            :total=\"total\"\r\n            @current-change=\"handlePageChange\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Sidebar from \"@/components/Sidebar.vue\";\r\nimport Breadcrumb from \"@/components/Breadcrumb.vue\";\r\nimport BookSearch from \"@/components/BookSearch.vue\";\r\nimport BookTable from \"@/components/BookTable.vue\";\r\n\r\n// 添加本地函数实现\r\nfunction getCurrentUser() {\r\n  try {\r\n    if (typeof window !== \"undefined\") {\r\n      const w = eval(\"window\");\r\n      if (w && w.localStorage) {\r\n        const userStr = w.localStorage.getItem(\"user\");\r\n        if (userStr) return JSON.parse(userStr);\r\n      }\r\n    }\r\n  } catch (e) {\r\n    // ignore error\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default {\r\n  name: \"BookManagement\",\r\n  components: {\r\n    Sidebar,\r\n    Breadcrumb,\r\n    BookSearch,\r\n    BookTable,\r\n  },\r\n  data() {\r\n    return {\r\n      breadcrumbItems: [{ text: \"图书列表\" }],\r\n      books: [],\r\n      filteredBooks: [],\r\n      page: 1,\r\n      pageSize: 20, // 每页20条\r\n      multipleSelection: [],\r\n      showBookForm: false,\r\n      currentBook: null,\r\n      total: 0,\r\n      searchParams: {},\r\n      isAdmin: false,\r\n    };\r\n  },\r\n  computed: {\r\n    pagedBooks() {\r\n      return this.filteredBooks;\r\n    },\r\n  },\r\n  created() {\r\n    // 使用导入的 getCurrentUser 函数\r\n    const currentUser = getCurrentUser();\r\n    this.isAdmin = currentUser && currentUser.role === 1;\r\n    this.fetchBooks();\r\n  },\r\n  methods: {\r\n    fetchBooks(params = {}) {\r\n      const query = {\r\n        page: this.page,\r\n        size: this.pageSize,\r\n        ...this.searchParams,  // 合并持久化搜索条件\r\n        ...params,             // 合并即时参数\r\n      };\r\n      this.$axios\r\n        .get(\"/api/books\", { params: query })  // 修改接口地址为标准查询接口\r\n        .then((res) => {\r\n          let list = [];\r\n          let total = 0;\r\n          if (res.data) {\r\n            if (Array.isArray(res.data.data)) {\r\n              list = res.data.data;\r\n              total = res.data.total || res.data.count || 0;\r\n            } else if (Array.isArray(res.data.list)) {\r\n              list = res.data.list;\r\n              total = res.data.total || res.data.count || 0;\r\n            } else if (Array.isArray(res.data)) {\r\n              list = res.data;\r\n              total = res.data.length;\r\n            }\r\n          }\r\n          if (!Array.isArray(list)) list = [];\r\n          this.filteredBooks = list;\r\n          this.total = total;\r\n        })\r\n        .catch(() => {\r\n          this.$message.error(\"获取图书数据失败，请稍后重试\"); // 提供用户友好的错误提示\r\n          this.filteredBooks = [];\r\n          this.total = 0;\r\n        });\r\n    },\r\n    handleSearch(params) {\r\n      this.searchParams = params;\r\n      this.page = 1;  // 重置到第一页\r\n      this.fetchBooks();\r\n    },\r\n    handleReset() {\r\n      this.searchParams = {};\r\n      this.page = 1;\r\n      this.fetchBooks();\r\n    },\r\n    handlePageChange(page) {\r\n      this.page = page;\r\n      this.fetchBooks();\r\n    },\r\n    handleSelectionChange(selection) {\r\n      this.multipleSelection = selection;\r\n    },\r\n    openBookForm(book = null) {\r\n      this.currentBook = book;\r\n      this.showBookForm = true;\r\n    },\r\n    handleBookSubmit(book) {\r\n      const isEdit = !!book.id;\r\n      const request = isEdit \r\n        ? this.$axios.put(`/api/books/${book.id}`, book)\r\n        : this.$axios.post(\"/api/books\", book);\r\n\r\n      request.then(res => {\r\n        this.$message.success(isEdit ? \"更新成功\" : \"添加成功\");\r\n        this.showBookForm = false;\r\n        this.fetchBooks(); // 重新获取最新数据\r\n      }).catch(err => {\r\n        this.$message.error(\r\n          err.response?.data?.message || \"操作失败，请稍后重试\"\r\n        );\r\n      });\r\n    },\r\n\r\n    handleDelete(book) {\r\n      this.$confirm(`确认删除【${book.title}】吗？`, \"提示\", {\r\n        type: \"warning\"\r\n      }).then(() => {\r\n        this.$axios.delete(`/api/books/${book.id}`)\r\n          .then(() => {\r\n            this.fetchBooks();\r\n            this.$message.success(\"删除成功\");\r\n          });\r\n      }).catch(() => {});\r\n    },\r\n\r\n    handleBatchDelete() {\r\n      this.$confirm(`确认删除选中的${this.multipleSelection.length}本图书吗？`, \"警告\", {\r\n        type: \"warning\"\r\n      }).then(() => {\r\n        const ids = this.multipleSelection.map(b => b.id);\r\n        this.$axios.delete(\"/api/books/batch\", { data: { ids } })\r\n          .then(() => {\r\n            this.fetchBooks();\r\n            this.$message.success(\"批量删除成功\");\r\n          });\r\n      }).catch(() => {});\r\n    }\r\n\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 主布局样式 */\r\n.user-management-layout {\r\n  display: flex;\r\n  min-height: 100vh;\r\n  background: #f5f7fa;\r\n}\r\n/* 侧边栏样式 */\r\n.sidebar {\r\n  width: 220px;\r\n  background: #fff;\r\n  border-right: 1px solid #e6e6e6;\r\n}\r\n/* 主内容区域样式 */\r\n.main-content {\r\n  flex: 1;\r\n  padding: 24px;\r\n}\r\n/* 内容区域样式 */\r\n.content-area {\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.04);\r\n  padding: 24px;\r\n}\r\n/* 操作按钮区域样式 */\r\n.actions {\r\n  margin-bottom: 16px;\r\n  display: flex;\r\n  gap: 12px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}